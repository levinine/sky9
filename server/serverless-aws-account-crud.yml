functions:
  CreateAccount:
    handler: src/handler/aws-account-handler.createAccount
  GetAccounts:
    handler: src/handler/aws-account-handler.getAccounts
    events:
      - http:
          path: accounts
          method: get
          cors: true
          authorizer: ${self:custom.authorizer}
  GetAccount:
    handler: src/handler/aws-account-handler.getAccount
    events:
      - http:
          path: accounts/{id}
          method: get
          cors: true
          authorizer: ${self:custom.authorizer}
  UpdateAccount:
    handler: src/handler/aws-account-handler.updateAccount
    events:
      - http:
          path: accounts/{id}
          method: put
          cors: true
          authorizer: ${self:custom.authorizer}
  DeleteAccount:
    handler: src/handler/aws-account-handler.deleteAccount
  SyncAccounts:
    handler: src/handler/aws-account-handler.syncAccounts
    timeout: 90
    events:
      - http:
          path: sync-accounts
          method: post
          cors: true
          authorizer: ${self:custom.authorizer}
      - schedule: cron(0,30 8-18 * * ? *)
  SyncBudgets:
    handler: src/handler/aws-account-handler.syncBudgets
    timeout: 90
    events:
      - http:
          path: sync-budgets
          method: post
          cors: true
          authorizer: ${self:custom.authorizer}
      - schedule: cron(1,31 8-18 * * ? *)
  SyncOwners:
    handler: src/handler/aws-account-handler.syncOwners
    timeout: 90
    events:
      - http:
          path: sync-owners
          method: post
          cors: true
          authorizer: ${self:custom.authorizer}
      - schedule: cron(2,32 8-18 * * ? *)
  CreateBudget:
    handler: src/handler/aws-account-handler.createBudget
  # Helper lambda - Update existing accounst with their created time from service catalog service
  # ideally, this lambda was triggered only once to set created time for stale/existing accounts.
  SyncCreatedTime:
    handler: src/handler/aws-account-handler.syncAccountsCreatedTime
    timeout: 90
    events:
      - http:
          path: sync-accounts-created-time
          method: post
          cors: true
          authorizer: ${self:custom.authorizer}
  # Helper lambda - Update existing accounts to status Done when Statuses are introduced
  UpdateAccountsToDone:
    handler: src/handler/aws-account-handler.updateAccountsToDone
    timeout: 90
    events:
      - http:
          path: accounts/done
          method: post
          cors: true
          authorizer: ${self:custom.authorizer}
  # Helper lambda - check status for all accounts that are tried to be created (stale/created/in progress/in error state)
  GetProvisionedAcounts:
    handler: src/handler/aws-account-handler.getProvisionedAcounts
    events:
      - http:
          path: accounts/provisioned
          method: get
          cors: true
          authorizer: ${self:custom.authorizer}