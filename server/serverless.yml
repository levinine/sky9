service: sky9

provider:
  name: aws
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "*"
    - Effect: Allow
      Action:
        - cloudtrail:LookupEvents
        - organizations:ListAccounts
        - servicecatalog:*
        - budgets:*
        - sts:GetCallerIdentity
        - controltower:*
        - iam:*
        - sso:*
        - sso-directory:*
        - sns:*
      Resource: "*"
  runtime: nodejs16.x
  stage: ${opt:stage, "test"}
  region: ${opt:region, "eu-west-1"}
  environment:
    DYNAMO_DB_REGION: ${self:provider.region}
    DYNAMO_DB_ENDPOINT: dynamodb.${self:provider.region}.amazonaws.com
    ACCOUNT_TABLE: Account-${self:provider.stage}
    ACCOUNT_GCP_TABLE: Account-GCP-${self:provider.stage}
    ORGANIZATION: ${ssm:/sky9/${self:provider.stage}/organization}
    ORGANIZATION_DOMAIN: ${ssm:/sky9/${self:provider.stage}/organizationDomain}
    AD_TENANT_ID: ${ssm:/sky9/${self:provider.stage}/adTenantId}
    AD_CLIENT_ID: ${ssm:/sky9/${self:provider.stage}/adAppClientId}
    AD_CLIENT_SECRET: ${ssm:/sky9/${self:provider.stage}/adAppClientSecretGraph}
    AD_RUNBOOK_URL: ${ssm:/sky9/${self:provider.stage}/adRunbookUrl}
    AD_RUNBOOK_KEY: ${ssm:/sky9/${self:provider.stage}/adRunbookKey}
    LAMBDA_ROLE: arn:aws:iam::#{AWS::AccountId}:role/${self:service}-${self:provider.stage}-${self:provider.region}-lambdaRole
    SNS_ALERTS_TOPIC: arn:aws:sns:${self:provider.region}:#{AWS::AccountId}:sky9-${self:provider.stage}-alerts-topic
    GCP_SERVICE_ACCOUNT_KEYS: ${ssm:/sky9/${self:provider.stage}/gcpAccountKeys}
    GCP_PARENT_FOLDER_VALUE: ${ssm:/sky9/${self:provider.stage}/gcpParentFolderValue, "320110726660"}
    GCP_ORGANIZATION: ${ssm:/sky9/${self:provider.stage}/gcpOrganization, "GCP-SRB"}
    GCP_BILLING_ACCOUNT_ID: ${ssm:/sky9/${self:provider.stage}/gcpBillingAccountId, "0157C8-014F5A-85A508"}
    GCP_BUDGET_SUBSCRIPTION_ID: ${ssm:/sky9/${self:provider.stage}/gcpBudgetSubscriptionId, "example-budget-sub"} # TODO: GCP_BUDGET_PUBSUB_SUBSCRIPTION_ID
    GCP_PUBSUB_TOPIC_ID: ${ssm:/sky9/${self:provider.stage}/gcpPubSubTopicId, "example-budget"}

plugins:
  - serverless-offline-scheduler
  - serverless-pseudo-parameters
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-step-functions
  - serverless-dashboard

functions:
  - ${file(./serverless-aws-account-create.yml):functions}
  - ${file(./serverless-aws-account-crud.yml):functions}
  - ${file(./serverless-gcp-account-create.yml):functions}
  - ${file(./serverless-gcp-account-crud.yml):functions}

stepFunctions:
  - ${file(./serverless-aws-account-create.yml):stepFunctions}
  - ${file(./serverless-gcp-account-create.yml):stepFunctions}

custom:
  authorizer:
    type: COGNITO_USER_POOLS
    authorizerId: { Ref: ApiGatewayAuthorizer }
  dynamodb:
    stages:
      - local
    start:
      migrate: true
      port: 8000
  serverless-offline:
      port: 4000

resources:
  - ${file(./resources/dynamoDB.yml)}
  - ${file(./resources/cognito.yml)}
  - ${file(./resources/sns.yml)}
